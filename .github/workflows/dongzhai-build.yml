name: 🏠 栋仔主题编译 - 无Node版

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 300

    steps:
    - name: 📋 初始化检查
      uses: actions/checkout@v4

    - name: 🔍 验证配置文件
      run: |
        if [ ! -f ".config" ]; then
          echo "错误：缺少配置文件"
          exit 1
        fi
        echo "找到配置文件"

    - name: 🛠️ 安装编译环境
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git libncurses5-dev libssl-dev python3 unzip wget curl
        echo "环境安装完成"

    - name: 📥 克隆源码
      run: |
        git clone $REPO_URL lede
        echo "源码克隆完成"

    - name: 🔄 更新软件源
      run: |
        cd lede
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        echo "软件源更新完成"

    - name: 🚫 彻底移除Node.js包
      run: |
        cd lede
        echo "彻底移除Node.js相关包..."
        
        # 从feeds中移除node包
        if [ -d "feeds/packages/lang/node" ]; then
          rm -rf feeds/packages/lang/node
          echo "移除 feeds/packages/lang/node"
        fi
        
        # 从package目录移除node包
        if [ -d "package/feeds/packages/node" ]; then
          rm -rf package/feeds/packages/node
          echo "移除 package/feeds/packages/node"
        fi
        
        # 创建空的node目录避免错误
        mkdir -p feeds/packages/lang/node
        echo "创建空node目录"

    - name: 🎨 部署栋仔主题
      run: |
        cd lede
        mkdir -p package/lean/dongzhai-theme/luci-theme-dongzhai/files/www/luci-static/dongzhai/css
        
        # 简单Makefile
        cat > package/lean/dongzhai-theme/luci-theme-dongzhai/Makefile << 'EOF'
include $(TOPDIR)/rules.mk
LUCI_TITLE:=栋仔主题
PKG_VERSION:=1.0
PKG_RELEASE:=1
include $(INCLUDE_DIR)/package.mk
define Package/luci-theme-dongzhai
  $(call Package/luci/webtemplate)
  TITLE:=栋仔主题
endef
define Build/Configure
endef
define Build/Compile
endef
define Package/luci-theme-dongzhai/install
	$(INSTALL_DIR) $(1)/www/luci-static/dongzhai
endef
$(eval $(call BuildPackage,luci-theme-dongzhai))
EOF
        
        echo "主题部署完成"

    - name: ⚙️ 应用配置
      run: |
        cd lede
        cp ../.config .config
        
        # 强制禁用所有node相关配置
        grep -v "CONFIG_PACKAGE_node" .config > .config.tmp
        mv .config.tmp .config
        echo "# CONFIG_PACKAGE_node is not set" >> .config
        echo "# CONFIG_PACKAGE_node-npm is not set" >> .config
        echo "# CONFIG_PACKAGE_node-yarn is not set" >> .config
        
        echo "CONFIG_PACKAGE_luci-theme-dongzhai=y" >> .config
        echo "CONFIG_DEFAULT_luci-theme-dongzhai=y" >> .config
        
        make defconfig
        echo "配置应用完成"

    - name: 📦 下载软件包
      run: |
        cd lede
        make download -j1
        echo "软件包下载完成"

    - name: 🔨 编译固件
      run: |
        cd lede
        echo "开始编译..."
        make -j1 V=s
        echo "编译完成"

    - name: 📤 上传结果
      uses: actions/upload-artifact@v4
      with:
        name: 栋仔固件
        path: lede/bin/targets/**/*.bin
        retention-days: 30

    - name: ✅ 完成提示
      run: |
        echo "编译完成"
