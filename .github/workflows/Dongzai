name: 栋仔主题编译

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 240

    steps:
    - name: 检查代码和配置
      uses: actions/checkout@v4

    - name: 验证配置文件
      run: |
        echo "=== 检查必要文件 ==="
        if [ -f ".config" ]; then
          echo "✅ 找到 .config 文件"
          echo "配置文件内容:"
          cat .config
        else
          echo "❌ 错误：缺少 .config 文件"
          echo "请在仓库根目录创建 .config 文件"
          exit 1
        fi
        
        if [ -d ".github/themes/dongzhai" ]; then
          echo "✅ 找到主题文件"
        else
          echo "❌ 错误：缺少主题文件"
          echo "请创建 .github/themes/dongzhai/ 目录结构"
          exit 1
        fi

    - name: 初始化环境
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git libncurses5-dev libssl-dev python2.7 python3 unzip wget curl
        python2.7 --version
        echo "✅ 环境初始化完成"

    - name: 克隆Lean源码
      run: |
        echo "克隆 Lean OpenWrt 源码..."
        git clone $REPO_URL lede
        echo "✅ 源码克隆完成"

    - name: 准备编译环境
      run: |
        cd lede
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        echo "✅ 环境准备完成"

    - name: 部署栋仔主题
      run: |
        cd lede
        echo "开始部署栋仔个性化设置..."
        
        # 创建主题目录
        mkdir -p package/lean/dongzhai-theme/luci-theme-dongzhai
        
        # 复制主题文件
        if [ -d "../.github/themes/dongzhai" ]; then
          echo "复制栋仔主题文件..."
          cp -r ../.github/themes/dongzhai/* package/lean/dongzhai-theme/
          echo "✅ 主题文件复制完成"
        else
          echo "⚠️ 未找到主题文件，使用基础模板"
        fi
        
        # 创建主题的Makefile
        cat > package/lean/dongzhai-theme/luci-theme-dongzhai/Makefile << 'EOF'
include $(TOPDIR)/rules.mk

LUCI_TITLE:=栋仔个性化主题
LUCI_DEPENDS:=
PKG_VERSION:=1.0
PKG_RELEASE:=1

include $(INCLUDE_DIR)/package.mk

define Package/luci-theme-dongzhai
  $(call Package/luci/webtemplate)
  TITLE:=栋仔个性化主题
  DEPENDS:=+luci-compat
endef

define Package/luci-theme-dongzhai/description
  栋仔个性化主题
endef

define Build/Configure
endef

define Build/Compile
endef

define Package/luci-theme-dongzhai/install
	$(INSTALL_DIR) $(1)/www/luci-static/dongzhai
	[ -d ./files ] && $(CP) ./files/* $(1)/www/luci-static/dongzhai/
endef

$(eval $(call BuildPackage,luci-theme-dongzhai))
EOF

        echo "✅ 栋仔主题部署完成"

    - name: 配置编译选项
      run: |
        cd lede
        echo "应用配置文件..."
        cp ../.config .config
        
        echo "添加栋仔主题配置..."
        echo "CONFIG_PACKAGE_luci-theme-dongzhai=y" >> .config
        echo "CONFIG_DEFAULT_luci-theme-dongzhai=y" >> .config
        
        make defconfig
        echo "✅ 配置完成"

    - name: 下载软件包
      run: |
        cd lede
        echo "开始下载软件包..."
        make download -j2
        echo "✅ 软件包下载完成"

    - name: 编译固件
      run: |
        cd lede
        echo "开始编译固件..."
        echo "这可能需要2-4小时，请耐心等待..."
        make -j2
        echo "✅ 编译完成"

    - name: 检查编译结果
      run: |
        cd lede/bin/targets
        echo "=== 查找生成的固件 ==="
        find . -name "*.bin" -type f
        echo "✅ 结果检查完成"

    - name: 上传固件
      uses: actions/upload-artifact@v4
      with:
        name: 栋仔主题固件
        path: lede/bin/targets/**/*.bin
        retention-days: 7

    - name: 编译成功通知
      if: success()
      run: |
        echo "🎉 编译成功完成！"
        echo "📦 固件已上传到 Artifacts"
        echo "⏰ 总编译时间: 约2-4小时"
